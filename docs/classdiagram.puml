@startuml
namespace auth {
    interface Authenticator  {
        + Authenticate(user string, password string, r *http.Request) bool

    }
    class AuthenticatorFunc << (S,Aquamarine) >> {
        + Authenticate(user string, password string, r *http.Request) bool

    }
    class auth.AuthenticatorFunc << (T, #FF7700) >>  {
    }
    class "<font color=blue>func</font>(string, string, *http.Request) bool" as fontcolorbluefuncfontstringstringhttpRequestbool {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}

"auth.Authenticator" <|-- "implements""auth.AuthenticatorFunc"


namespace image {
    class Image << (S,Aquamarine) >> {
        - hash string

        + Name string
        + Date time.Time

        + FormattedDate() string

    }
    class ImageManager << (S,Aquamarine) >> {
        - images []*Image
        - user string

        - sort() 

        + Contains(image *UploadImage) bool
        + AddImageUpload(image *UploadImage) error
        + AddImage(image *Image) 
        + GetImage(name string) *Image
        + GetThumbnails(start int, length int) []*Image
        + TotalImages() int

    }
    class Pixel << (S,Aquamarine) >> {
        + R uint32
        + G uint32
        + B uint32
        + A uint32

        + GetColorRGBA() color.RGBA

    }
    class UploadImage << (S,Aquamarine) >> {
        - userPath string

        + Raw []byte

        + SetUserPath(path string) 
        + SaveImageToDisk() error
        + GenerateAndSaveThumbnailToDisk() error

    }
}
"image.Image" *-- "extends""image.UploadImage"


"image.Image""uses" o-- "time.Time"

namespace main {
    class GlobalVariables << (S,Aquamarine) >> {
        + Username string
        + LoggedIn bool
        + ThumbDir string

    }
    class TemplateVariables << (S,Aquamarine) >> {
        + Global GlobalVariables
        + Result <font color=blue>interface</font>{}
        + Local <font color=blue>interface</font>{}

    }
    class UserInput << (S,Aquamarine) >> {
        + Username string
        + Password string
        + Host string
        + Path string

    }
}


"main.TemplateVariables""uses" o-- "main.GlobalVariables"

namespace user {
    class Metadata << (S,Aquamarine) >> {
        + Path string
        + Format string
        + NumberOfPrints int

    }
    class OrderList << (S,Aquamarine) >> {
        + Entries []*OrderListEntry

        + AddOrderEntry(image *image.Image) error
        + RemoveOrderEntry(imageName string) bool
        + GetOrderEntry(imageName string) (int, *OrderListEntry)

    }
    class OrderListEntry << (S,Aquamarine) >> {
        + Image *image.Image
        + Format string
        + NumberOfPrints int

    }
    class User << (S,Aquamarine) >> {
        - password string

        + Name string
        + OrderList *OrderList

        + ToCsv() []string
        + ComparePassword(clearPassword string) (bool, error)

    }
    class UserManager << (S,Aquamarine) >> {
        + Users []*User
        + UsersFile string

        + AddUser(user *User) 
        + LoadUsers() error
        + GetUser(username string) *User
        + StoreUsers() error
        + Register(name string, password string) error
        + UserExists(name string) bool
        + Authenticate(user string, pw string) bool

    }
}


"user.OrderList""uses" o-- "user.OrderListEntry"
"user.OrderListEntry""uses" o-- "image.Image"
"user.User""uses" o-- "user.OrderList"
"user.UserManager""uses" o-- "user.User"

"auth.fontcolorbluefuncfontstringstringhttpRequestbool" #.. "alias of""auth.AuthenticatorFunc"
@enduml
